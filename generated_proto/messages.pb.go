// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.19.4
// source: proto/messages.proto

package generated_proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type FontName int32

const (
	FontName_FontName_UNKNOWN    FontName = 0
	FontName_NOTO_SANS_JP_BOLD   FontName = 1
	FontName_NOTO_SANS_JP_MEDIUM FontName = 2
)

// Enum value maps for FontName.
var (
	FontName_name = map[int32]string{
		0: "FontName_UNKNOWN",
		1: "NOTO_SANS_JP_BOLD",
		2: "NOTO_SANS_JP_MEDIUM",
	}
	FontName_value = map[string]int32{
		"FontName_UNKNOWN":    0,
		"NOTO_SANS_JP_BOLD":   1,
		"NOTO_SANS_JP_MEDIUM": 2,
	}
)

func (x FontName) Enum() *FontName {
	p := new(FontName)
	*p = x
	return p
}

func (x FontName) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FontName) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_messages_proto_enumTypes[0].Descriptor()
}

func (FontName) Type() protoreflect.EnumType {
	return &file_proto_messages_proto_enumTypes[0]
}

func (x FontName) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FontName.Descriptor instead.
func (FontName) EnumDescriptor() ([]byte, []int) {
	return file_proto_messages_proto_rawDescGZIP(), []int{0}
}

type Backend int32

const (
	Backend_Backend_UNKNOWN Backend = 0
	Backend_alias           Backend = 1
	Backend_acd             Backend = 2
	Backend_azureblob       Backend = 3
	Backend_b2              Backend = 4
	Backend_box             Backend = 5
	Backend_crypt           Backend = 6
	Backend_cache           Backend = 7
	Backend_chunker         Backend = 8
	Backend_compress        Backend = 9
	Backend_drive           Backend = 10
	Backend_dropbox         Backend = 11
	Backend_fichier         Backend = 12
	Backend_filefabric      Backend = 13
	Backend_ftp             Backend = 14
	Backend_gcs             Backend = 15
	Backend_gphotos         Backend = 16
	Backend_hasher          Backend = 17
	Backend_hdfs            Backend = 18
	Backend_http            Backend = 19
	Backend_swift           Backend = 20
	Backend_hubic           Backend = 21
	Backend_jottacloud      Backend = 22
	Backend_koofr           Backend = 23
	Backend_local           Backend = 24
	Backend_mailru          Backend = 25
	Backend_mega            Backend = 26
	Backend_memory          Backend = 27
	Backend_netstorage      Backend = 28
	Backend_onedrive        Backend = 29
	Backend_opendrive       Backend = 30
	Backend_pcloud          Backend = 31
	Backend_premiumizeme    Backend = 32
	Backend_putio           Backend = 33
	Backend_qingstor        Backend = 34
	Backend_s3              Backend = 35
	Backend_seafile         Backend = 36
	Backend_sftp            Backend = 37
	Backend_sharefile       Backend = 38
	Backend_sia             Backend = 39
	Backend_storj           Backend = 40
	Backend_tardigrade      Backend = 41
	Backend_sugarsync       Backend = 42
	Backend_union           Backend = 43
	Backend_uptobox         Backend = 44
	Backend_webdav          Backend = 45
	Backend_yandex          Backend = 46
	Backend_zoho            Backend = 47
)

// Enum value maps for Backend.
var (
	Backend_name = map[int32]string{
		0:  "Backend_UNKNOWN",
		1:  "alias",
		2:  "acd",
		3:  "azureblob",
		4:  "b2",
		5:  "box",
		6:  "crypt",
		7:  "cache",
		8:  "chunker",
		9:  "compress",
		10: "drive",
		11: "dropbox",
		12: "fichier",
		13: "filefabric",
		14: "ftp",
		15: "gcs",
		16: "gphotos",
		17: "hasher",
		18: "hdfs",
		19: "http",
		20: "swift",
		21: "hubic",
		22: "jottacloud",
		23: "koofr",
		24: "local",
		25: "mailru",
		26: "mega",
		27: "memory",
		28: "netstorage",
		29: "onedrive",
		30: "opendrive",
		31: "pcloud",
		32: "premiumizeme",
		33: "putio",
		34: "qingstor",
		35: "s3",
		36: "seafile",
		37: "sftp",
		38: "sharefile",
		39: "sia",
		40: "storj",
		41: "tardigrade",
		42: "sugarsync",
		43: "union",
		44: "uptobox",
		45: "webdav",
		46: "yandex",
		47: "zoho",
	}
	Backend_value = map[string]int32{
		"Backend_UNKNOWN": 0,
		"alias":           1,
		"acd":             2,
		"azureblob":       3,
		"b2":              4,
		"box":             5,
		"crypt":           6,
		"cache":           7,
		"chunker":         8,
		"compress":        9,
		"drive":           10,
		"dropbox":         11,
		"fichier":         12,
		"filefabric":      13,
		"ftp":             14,
		"gcs":             15,
		"gphotos":         16,
		"hasher":          17,
		"hdfs":            18,
		"http":            19,
		"swift":           20,
		"hubic":           21,
		"jottacloud":      22,
		"koofr":           23,
		"local":           24,
		"mailru":          25,
		"mega":            26,
		"memory":          27,
		"netstorage":      28,
		"onedrive":        29,
		"opendrive":       30,
		"pcloud":          31,
		"premiumizeme":    32,
		"putio":           33,
		"qingstor":        34,
		"s3":              35,
		"seafile":         36,
		"sftp":            37,
		"sharefile":       38,
		"sia":             39,
		"storj":           40,
		"tardigrade":      41,
		"sugarsync":       42,
		"union":           43,
		"uptobox":         44,
		"webdav":          45,
		"yandex":          46,
		"zoho":            47,
	}
)

func (x Backend) Enum() *Backend {
	p := new(Backend)
	*p = x
	return p
}

func (x Backend) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Backend) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_messages_proto_enumTypes[1].Descriptor()
}

func (Backend) Type() protoreflect.EnumType {
	return &file_proto_messages_proto_enumTypes[1]
}

func (x Backend) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Backend.Descriptor instead.
func (Backend) EnumDescriptor() ([]byte, []int) {
	return file_proto_messages_proto_rawDescGZIP(), []int{1}
}

type PrepareRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InputFile  string `protobuf:"bytes,1,opt,name=input_file,json=inputFile,proto3" json:"input_file,omitempty"`
	OutputFile string `protobuf:"bytes,2,opt,name=output_file,json=outputFile,proto3" json:"output_file,omitempty"`
	VideoIndex int32  `protobuf:"varint,3,opt,name=video_index,json=videoIndex,proto3" json:"video_index,omitempty"`
	AudioIndex int32  `protobuf:"varint,4,opt,name=audio_index,json=audioIndex,proto3" json:"audio_index,omitempty"`
}

func (x *PrepareRequest) Reset() {
	*x = PrepareRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_messages_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PrepareRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PrepareRequest) ProtoMessage() {}

func (x *PrepareRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_messages_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PrepareRequest.ProtoReflect.Descriptor instead.
func (*PrepareRequest) Descriptor() ([]byte, []int) {
	return file_proto_messages_proto_rawDescGZIP(), []int{0}
}

func (x *PrepareRequest) GetInputFile() string {
	if x != nil {
		return x.InputFile
	}
	return ""
}

func (x *PrepareRequest) GetOutputFile() string {
	if x != nil {
		return x.OutputFile
	}
	return ""
}

func (x *PrepareRequest) GetVideoIndex() int32 {
	if x != nil {
		return x.VideoIndex
	}
	return 0
}

func (x *PrepareRequest) GetAudioIndex() int32 {
	if x != nil {
		return x.AudioIndex
	}
	return 0
}

type EncodeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RcloneConfig       *RcloneConfig `protobuf:"bytes,1,opt,name=rclone_config,json=rcloneConfig,proto3" json:"rclone_config,omitempty"`
	PathToVideoFile    string        `protobuf:"bytes,2,opt,name=path_to_video_file,json=pathToVideoFile,proto3" json:"path_to_video_file,omitempty"`
	PathToSubtitleFile string        `protobuf:"bytes,3,opt,name=path_to_subtitle_file,json=pathToSubtitleFile,proto3" json:"path_to_subtitle_file,omitempty"`
}

func (x *EncodeRequest) Reset() {
	*x = EncodeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_messages_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EncodeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EncodeRequest) ProtoMessage() {}

func (x *EncodeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_messages_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EncodeRequest.ProtoReflect.Descriptor instead.
func (*EncodeRequest) Descriptor() ([]byte, []int) {
	return file_proto_messages_proto_rawDescGZIP(), []int{1}
}

func (x *EncodeRequest) GetRcloneConfig() *RcloneConfig {
	if x != nil {
		return x.RcloneConfig
	}
	return nil
}

func (x *EncodeRequest) GetPathToVideoFile() string {
	if x != nil {
		return x.PathToVideoFile
	}
	return ""
}

func (x *EncodeRequest) GetPathToSubtitleFile() string {
	if x != nil {
		return x.PathToSubtitleFile
	}
	return ""
}

type RcloneConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Backend        Backend `protobuf:"varint,1,opt,name=backend,proto3,enum=Backend" json:"backend,omitempty"`
	DriveTeamDrive string  `protobuf:"bytes,2,opt,name=drive_team_drive,json=driveTeamDrive,proto3" json:"drive_team_drive,omitempty"`
	DriveToken     string  `protobuf:"bytes,3,opt,name=drive_token,json=driveToken,proto3" json:"drive_token,omitempty"`
	DropboxToken   string  `protobuf:"bytes,4,opt,name=dropbox_token,json=dropboxToken,proto3" json:"dropbox_token,omitempty"`
}

func (x *RcloneConfig) Reset() {
	*x = RcloneConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_messages_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RcloneConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RcloneConfig) ProtoMessage() {}

func (x *RcloneConfig) ProtoReflect() protoreflect.Message {
	mi := &file_proto_messages_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RcloneConfig.ProtoReflect.Descriptor instead.
func (*RcloneConfig) Descriptor() ([]byte, []int) {
	return file_proto_messages_proto_rawDescGZIP(), []int{2}
}

func (x *RcloneConfig) GetBackend() Backend {
	if x != nil {
		return x.Backend
	}
	return Backend_Backend_UNKNOWN
}

func (x *RcloneConfig) GetDriveTeamDrive() string {
	if x != nil {
		return x.DriveTeamDrive
	}
	return ""
}

func (x *RcloneConfig) GetDriveToken() string {
	if x != nil {
		return x.DriveToken
	}
	return ""
}

func (x *RcloneConfig) GetDropboxToken() string {
	if x != nil {
		return x.DropboxToken
	}
	return ""
}

var File_proto_messages_proto protoreflect.FileDescriptor

var file_proto_messages_proto_rawDesc = []byte{
	0x0a, 0x14, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x92, 0x01, 0x0a, 0x0e, 0x50, 0x72, 0x65, 0x70, 0x61,
	0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x6e, 0x70,
	0x75, 0x74, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69,
	0x6e, 0x70, 0x75, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x6f, 0x75, 0x74, 0x70,
	0x75, 0x74, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6f,
	0x75, 0x74, 0x70, 0x75, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x76, 0x69, 0x64,
	0x65, 0x6f, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a,
	0x76, 0x69, 0x64, 0x65, 0x6f, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x75,
	0x64, 0x69, 0x6f, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0a, 0x61, 0x75, 0x64, 0x69, 0x6f, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x22, 0xa3, 0x01, 0x0a, 0x0d,
	0x45, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x32, 0x0a,
	0x0d, 0x72, 0x63, 0x6c, 0x6f, 0x6e, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x52, 0x63, 0x6c, 0x6f, 0x6e, 0x65, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x52, 0x0c, 0x72, 0x63, 0x6c, 0x6f, 0x6e, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x12, 0x2b, 0x0a, 0x12, 0x70, 0x61, 0x74, 0x68, 0x5f, 0x74, 0x6f, 0x5f, 0x76, 0x69, 0x64,
	0x65, 0x6f, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x70,
	0x61, 0x74, 0x68, 0x54, 0x6f, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x31,
	0x0a, 0x15, 0x70, 0x61, 0x74, 0x68, 0x5f, 0x74, 0x6f, 0x5f, 0x73, 0x75, 0x62, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x70,
	0x61, 0x74, 0x68, 0x54, 0x6f, 0x53, 0x75, 0x62, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x46, 0x69, 0x6c,
	0x65, 0x22, 0xa2, 0x01, 0x0a, 0x0c, 0x52, 0x63, 0x6c, 0x6f, 0x6e, 0x65, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x12, 0x22, 0x0a, 0x07, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x08, 0x2e, 0x42, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x52, 0x07, 0x62,
	0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x12, 0x28, 0x0a, 0x10, 0x64, 0x72, 0x69, 0x76, 0x65, 0x5f,
	0x74, 0x65, 0x61, 0x6d, 0x5f, 0x64, 0x72, 0x69, 0x76, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0e, 0x64, 0x72, 0x69, 0x76, 0x65, 0x54, 0x65, 0x61, 0x6d, 0x44, 0x72, 0x69, 0x76, 0x65,
	0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x72, 0x69, 0x76, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x72, 0x69, 0x76, 0x65, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x72, 0x6f, 0x70, 0x62, 0x6f, 0x78, 0x5f, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x72, 0x6f, 0x70, 0x62, 0x6f,
	0x78, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x2a, 0x50, 0x0a, 0x08, 0x46, 0x6f, 0x6e, 0x74, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x14, 0x0a, 0x10, 0x46, 0x6f, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x5f, 0x55,
	0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x15, 0x0a, 0x11, 0x4e, 0x4f, 0x54, 0x4f,
	0x5f, 0x53, 0x41, 0x4e, 0x53, 0x5f, 0x4a, 0x50, 0x5f, 0x42, 0x4f, 0x4c, 0x44, 0x10, 0x01, 0x12,
	0x17, 0x0a, 0x13, 0x4e, 0x4f, 0x54, 0x4f, 0x5f, 0x53, 0x41, 0x4e, 0x53, 0x5f, 0x4a, 0x50, 0x5f,
	0x4d, 0x45, 0x44, 0x49, 0x55, 0x4d, 0x10, 0x02, 0x2a, 0xd4, 0x04, 0x0a, 0x07, 0x42, 0x61, 0x63,
	0x6b, 0x65, 0x6e, 0x64, 0x12, 0x13, 0x0a, 0x0f, 0x42, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x5f,
	0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x61, 0x6c, 0x69,
	0x61, 0x73, 0x10, 0x01, 0x12, 0x07, 0x0a, 0x03, 0x61, 0x63, 0x64, 0x10, 0x02, 0x12, 0x0d, 0x0a,
	0x09, 0x61, 0x7a, 0x75, 0x72, 0x65, 0x62, 0x6c, 0x6f, 0x62, 0x10, 0x03, 0x12, 0x06, 0x0a, 0x02,
	0x62, 0x32, 0x10, 0x04, 0x12, 0x07, 0x0a, 0x03, 0x62, 0x6f, 0x78, 0x10, 0x05, 0x12, 0x09, 0x0a,
	0x05, 0x63, 0x72, 0x79, 0x70, 0x74, 0x10, 0x06, 0x12, 0x09, 0x0a, 0x05, 0x63, 0x61, 0x63, 0x68,
	0x65, 0x10, 0x07, 0x12, 0x0b, 0x0a, 0x07, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x65, 0x72, 0x10, 0x08,
	0x12, 0x0c, 0x0a, 0x08, 0x63, 0x6f, 0x6d, 0x70, 0x72, 0x65, 0x73, 0x73, 0x10, 0x09, 0x12, 0x09,
	0x0a, 0x05, 0x64, 0x72, 0x69, 0x76, 0x65, 0x10, 0x0a, 0x12, 0x0b, 0x0a, 0x07, 0x64, 0x72, 0x6f,
	0x70, 0x62, 0x6f, 0x78, 0x10, 0x0b, 0x12, 0x0b, 0x0a, 0x07, 0x66, 0x69, 0x63, 0x68, 0x69, 0x65,
	0x72, 0x10, 0x0c, 0x12, 0x0e, 0x0a, 0x0a, 0x66, 0x69, 0x6c, 0x65, 0x66, 0x61, 0x62, 0x72, 0x69,
	0x63, 0x10, 0x0d, 0x12, 0x07, 0x0a, 0x03, 0x66, 0x74, 0x70, 0x10, 0x0e, 0x12, 0x07, 0x0a, 0x03,
	0x67, 0x63, 0x73, 0x10, 0x0f, 0x12, 0x0b, 0x0a, 0x07, 0x67, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x73,
	0x10, 0x10, 0x12, 0x0a, 0x0a, 0x06, 0x68, 0x61, 0x73, 0x68, 0x65, 0x72, 0x10, 0x11, 0x12, 0x08,
	0x0a, 0x04, 0x68, 0x64, 0x66, 0x73, 0x10, 0x12, 0x12, 0x08, 0x0a, 0x04, 0x68, 0x74, 0x74, 0x70,
	0x10, 0x13, 0x12, 0x09, 0x0a, 0x05, 0x73, 0x77, 0x69, 0x66, 0x74, 0x10, 0x14, 0x12, 0x09, 0x0a,
	0x05, 0x68, 0x75, 0x62, 0x69, 0x63, 0x10, 0x15, 0x12, 0x0e, 0x0a, 0x0a, 0x6a, 0x6f, 0x74, 0x74,
	0x61, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x10, 0x16, 0x12, 0x09, 0x0a, 0x05, 0x6b, 0x6f, 0x6f, 0x66,
	0x72, 0x10, 0x17, 0x12, 0x09, 0x0a, 0x05, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x10, 0x18, 0x12, 0x0a,
	0x0a, 0x06, 0x6d, 0x61, 0x69, 0x6c, 0x72, 0x75, 0x10, 0x19, 0x12, 0x08, 0x0a, 0x04, 0x6d, 0x65,
	0x67, 0x61, 0x10, 0x1a, 0x12, 0x0a, 0x0a, 0x06, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x10, 0x1b,
	0x12, 0x0e, 0x0a, 0x0a, 0x6e, 0x65, 0x74, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x10, 0x1c,
	0x12, 0x0c, 0x0a, 0x08, 0x6f, 0x6e, 0x65, 0x64, 0x72, 0x69, 0x76, 0x65, 0x10, 0x1d, 0x12, 0x0d,
	0x0a, 0x09, 0x6f, 0x70, 0x65, 0x6e, 0x64, 0x72, 0x69, 0x76, 0x65, 0x10, 0x1e, 0x12, 0x0a, 0x0a,
	0x06, 0x70, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x10, 0x1f, 0x12, 0x10, 0x0a, 0x0c, 0x70, 0x72, 0x65,
	0x6d, 0x69, 0x75, 0x6d, 0x69, 0x7a, 0x65, 0x6d, 0x65, 0x10, 0x20, 0x12, 0x09, 0x0a, 0x05, 0x70,
	0x75, 0x74, 0x69, 0x6f, 0x10, 0x21, 0x12, 0x0c, 0x0a, 0x08, 0x71, 0x69, 0x6e, 0x67, 0x73, 0x74,
	0x6f, 0x72, 0x10, 0x22, 0x12, 0x06, 0x0a, 0x02, 0x73, 0x33, 0x10, 0x23, 0x12, 0x0b, 0x0a, 0x07,
	0x73, 0x65, 0x61, 0x66, 0x69, 0x6c, 0x65, 0x10, 0x24, 0x12, 0x08, 0x0a, 0x04, 0x73, 0x66, 0x74,
	0x70, 0x10, 0x25, 0x12, 0x0d, 0x0a, 0x09, 0x73, 0x68, 0x61, 0x72, 0x65, 0x66, 0x69, 0x6c, 0x65,
	0x10, 0x26, 0x12, 0x07, 0x0a, 0x03, 0x73, 0x69, 0x61, 0x10, 0x27, 0x12, 0x09, 0x0a, 0x05, 0x73,
	0x74, 0x6f, 0x72, 0x6a, 0x10, 0x28, 0x12, 0x0e, 0x0a, 0x0a, 0x74, 0x61, 0x72, 0x64, 0x69, 0x67,
	0x72, 0x61, 0x64, 0x65, 0x10, 0x29, 0x12, 0x0d, 0x0a, 0x09, 0x73, 0x75, 0x67, 0x61, 0x72, 0x73,
	0x79, 0x6e, 0x63, 0x10, 0x2a, 0x12, 0x09, 0x0a, 0x05, 0x75, 0x6e, 0x69, 0x6f, 0x6e, 0x10, 0x2b,
	0x12, 0x0b, 0x0a, 0x07, 0x75, 0x70, 0x74, 0x6f, 0x62, 0x6f, 0x78, 0x10, 0x2c, 0x12, 0x0a, 0x0a,
	0x06, 0x77, 0x65, 0x62, 0x64, 0x61, 0x76, 0x10, 0x2d, 0x12, 0x0a, 0x0a, 0x06, 0x79, 0x61, 0x6e,
	0x64, 0x65, 0x78, 0x10, 0x2e, 0x12, 0x08, 0x0a, 0x04, 0x7a, 0x6f, 0x68, 0x6f, 0x10, 0x2f, 0x42,
	0x13, 0x5a, 0x11, 0x2e, 0x2f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_messages_proto_rawDescOnce sync.Once
	file_proto_messages_proto_rawDescData = file_proto_messages_proto_rawDesc
)

func file_proto_messages_proto_rawDescGZIP() []byte {
	file_proto_messages_proto_rawDescOnce.Do(func() {
		file_proto_messages_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_messages_proto_rawDescData)
	})
	return file_proto_messages_proto_rawDescData
}

var file_proto_messages_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_proto_messages_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_proto_messages_proto_goTypes = []interface{}{
	(FontName)(0),          // 0: FontName
	(Backend)(0),           // 1: Backend
	(*PrepareRequest)(nil), // 2: PrepareRequest
	(*EncodeRequest)(nil),  // 3: EncodeRequest
	(*RcloneConfig)(nil),   // 4: RcloneConfig
}
var file_proto_messages_proto_depIdxs = []int32{
	4, // 0: EncodeRequest.rclone_config:type_name -> RcloneConfig
	1, // 1: RcloneConfig.backend:type_name -> Backend
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_proto_messages_proto_init() }
func file_proto_messages_proto_init() {
	if File_proto_messages_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_messages_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PrepareRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_messages_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EncodeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_messages_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RcloneConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_messages_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_messages_proto_goTypes,
		DependencyIndexes: file_proto_messages_proto_depIdxs,
		EnumInfos:         file_proto_messages_proto_enumTypes,
		MessageInfos:      file_proto_messages_proto_msgTypes,
	}.Build()
	File_proto_messages_proto = out.File
	file_proto_messages_proto_rawDesc = nil
	file_proto_messages_proto_goTypes = nil
	file_proto_messages_proto_depIdxs = nil
}
